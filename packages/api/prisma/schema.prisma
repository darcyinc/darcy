// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // Prisma sometimes uses the monorepo's node_modules folder as the output directory
  output = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String  @id @default(uuid())
  displayName String  @default("")
  handle      String  @unique
  bio         String  @default("")
  private     Boolean @default(false)
  avatar      String?
  banner      String?

  posts     Post[]
  auth      UserAuth?
  followers User[]    @relation("Followers")
  following User[]    @relation("Following")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  PostLikes    Post?   @relation("PostLikes", fields: [postLikesId], references: [id])
  postLikesId  String? @ignore
  PostReposts  Post?   @relation("PostReposts", fields: [postRepostId], references: [id])
  postRepostId String? @ignore
  Followers    User?   @relation("Followers", fields: [followersId], references: [id])
  followersId  String? @ignore
  Following    User?   @relation("Following", fields: [followingId], references: [id])
  followingId  String? @ignore
}

model UserAuth {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
  email  String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id       String   @id @default(uuid())
  author   User?    @relation(fields: [authorId], references: [id])
  authorId String?
  content  String?
  media    String[]

  likes    User[] @relation("PostLikes")
  reposts  User[] @relation("PostReposts")
  comments Post[] @relation("PostComments")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  PostComments   Post?   @relation("PostComments", fields: [postCommentsId], references: [id])
  postCommentsId String? @ignore
}
