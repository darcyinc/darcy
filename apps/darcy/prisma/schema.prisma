// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the User schema
model User {
  id          String  @id @unique @default(cuid())
  displayName String
  handle      String  @unique
  bio         String  @default("")
  private     Boolean @default(false)
  avatarUrl   String  @default("/assets/images/default-profile-picture.png")
  bannerUrl   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Define the relationships with other models
  posts     Post[]       @relation("Author")
  auth      UserAuth?
  followers UserFollow[] @relation("UserFollowers")
  following UserFollow[] @relation("UserFollowing")

  likedPosts    Post[] @relation("PostLikes")
  repostedPosts Post[] @relation("PostReposts")

  // Define the counts
  postCount      Int @default(0)
  followerCount  Int @default(0)
  followingCount Int @default(0)
}

// Define the UserAuth schema
model UserAuth {
  id     String @id @unique @default(cuid())
  user   User?  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
  email  String @unique

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

// Define the Post schema
model Post {
  id        String   @id @unique @default(cuid())
  author    User     @relation("Author", fields: [authorId], references: [id])
  authorId  String
  content   String
  mediaUrls String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Define the relationships with other models
  likes   User[] @relation("PostLikes")
  reposts User[] @relation("PostReposts")

  comments   Post[]  @relation("CommentOf")
  parentPost Post?   @relation("CommentOf", fields: [parentId], references: [id])
  parentId   String?

  // Define the counts
  likeCount    Int @default(0)
  repostCount  Int @default(0)
  commentCount Int @default(0)
}

// Define the UserFollow schema
model UserFollow {
  id       String @id @unique @default(cuid())
  user     User   @relation("UserFollowers", fields: [userId], references: [id])
  userId   String
  target   User   @relation("UserFollowing", fields: [targetId], references: [id])
  targetId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
